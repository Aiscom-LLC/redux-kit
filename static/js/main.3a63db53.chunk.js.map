{"version":3,"sources":["utils/axios.ts","store/pokemon/pokemons.actions.ts","store/pokemon/pokemons.reducer.ts","store/root.reducer.ts","store/index.ts","store/pokemon/pokemons.selectors.ts","pages/pokemons/pokemon/index.tsx","pages/pokemons/index.tsx","app.tsx","index.tsx"],"names":["axios","create","baseURL","process","payloadedWorker","initWorker","pokemons","actionCreatorFactory","async","initialState","next","previous","count","results","loading","errors","rootReducer","combineReducers","state","action","states","reducer","dataMask","loadingMask","errorMask","type","store","createStore","getPokemons","createSelector","Pokemon","name","url","id","split","replace","className","height","width","src","alt","href","PokemonsPage","dispatch","useDispatch","useState","limit","offset","filters","setFilters","useSelector","useEffect","map","p","key","value","onChange","e","Number","target","onClick","disabled","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQAEeA,E,OAAAA,EAAMC,OAAO,CAC1BC,QAASC,+BCGLC,EAAkBC,YAAWL,GAGtBM,EAFSC,YAAqB,YAEwDC,MAIjG,OCTIC,EAA6B,CACjCH,SAAU,CACRI,KAAM,GACNC,SAAU,GACVC,MAAO,EACPC,QAAS,IAEXC,SAAS,EACTC,OAAQ,ICTGC,EAAcC,YAAgB,CACzCX,SDW6B,WAAuE,IAAtEY,EAAqE,uDAA/CT,EAAcU,EAAiC,uCAC7FC,EAAM,eACPC,YAAQf,EAAUY,EAAOC,EAAQ,CAAEG,SAAU,WAAYC,YAAa,UAAWC,UAAW,YAEjG,OAAOJ,EAAOD,EAAOM,OAASP,KEfnBQ,EAAQC,YAAYX,G,gBCCpBY,EAAcC,aAFK,SAACX,GAAD,OAAwBA,EAAMZ,YAEF,kBAAoC,CAC9FQ,QAD0D,EAAGA,QAE7DC,OAF0D,EAAYA,OAGtET,SAH0D,EAAoBA,aCCnEwB,G,MAAwB,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,IACtCC,EAAaD,EAAIE,MAAM,YAAY,GAAGC,QAAQ,IAAK,IAEzD,OACE,yBAAKC,UAAU,WACb,yBAAKA,UAAU,gBACb,yBAAKC,OAAO,QAAQC,MAAM,QAAQC,IAAG,wDAAmDN,EAAnD,QAA6DO,IAAKT,KAEzG,yBAAKK,UAAU,iBACb,yBAAKA,UAAU,uBAAf,SAA4CL,GAC5C,yBAAKK,UAAU,sBACb,uBAAGK,KAAMT,GAAT,YCLGU,G,MAAmB,WAC9B,IAAMC,EAAWC,cADmB,EAGNC,mBAAkB,CAC9CC,MAAO,GACPC,OAAQ,IAL0B,mBAG7BC,EAH6B,KAGpBC,EAHoB,OAQNC,YAAYtB,GAAlCtB,EAR4B,EAQ5BA,SAAUQ,EARkB,EAQlBA,QAMlB,OAJAqC,qBAAU,WNPkB,IAACL,EAAeC,EMQ1CJ,GNR2BG,EMQHE,EAAQF,MNRUC,EMQHC,EAAQD,ONPjD3C,EAAgBE,EAAD,wBAA4BwC,EAA5B,mBAA4CC,GAAU,aMQlE,CAACJ,EAAUK,IAGZ,yBAAKZ,UAAU,QACb,yBAAKA,UAAU,gBACb,yCAEF,yBAAKA,UAAU,cACZtB,GAAW,2CADd,OAEGR,QAFH,IAEGA,OAFH,EAEGA,EAAUO,QAAQuC,KAAI,SAACC,GAAD,OACrB,kBAAC,EAAD,eAASC,IAAKD,EAAErB,KAASqB,QAG7B,yBAAKjB,UAAU,gBACb,2BACEX,KAAK,SACL8B,MAAOP,EAAQF,MACfU,SAAU,SAAAC,GAAC,OAAIR,EAAW,CAAEF,OAAQ,EAAGD,MAAOY,OAAOD,EAAEE,OAAOJ,YAEhE,6BACE,4BACEK,QAAS,kBAAMX,EAAW,eAAKD,EAAN,CAAeD,OAAQC,EAAQD,OAASC,EAAQF,UACzEe,UAAWvD,EAASK,UAFtB,aAMA,4BACEiD,QAAS,kBAAMX,EAAW,eAAKD,EAAN,CAAeD,OAAQC,EAAQD,OAASC,EAAQF,UACzEe,UAAWvD,EAASI,MAFtB,kBC9CGoD,EAAU,kBAAM,kBAAC,EAAD,O,MCM7BC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUvC,MAAOA,GACf,kBAAC,EAAD,QAGJwC,SAASC,eAAe,W","file":"static/js/main.3a63db53.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n  baseURL: process.env.API_URL,\n});\n","import { actionCreatorFactory, initWorker, AsyncActionCreators } from '@wellyes/redux-kit';\nimport axios from '@utils/axios';\n\nimport { PokemonResponse } from './types';\nimport { ErrorResponse } from '../types';\n\nconst payloadedWorker = initWorker(axios);\nconst actionCreator = actionCreatorFactory('pokemons');\n\nexport const pokemons: AsyncActionCreators<object, PokemonResponse, ErrorResponse> = actionCreator.async<\n  object,\n  PokemonResponse,\n  ErrorResponse\n>('all');\n\nexport const pokemonsWorker = (limit: number, offset: number) =>\n  payloadedWorker(pokemons, `pokemon?limit=${limit}&offset=${offset}`, 'get');\n","import { Action, reducer } from '@wellyes/redux-kit';\nimport { PokemonState } from './types';\nimport { pokemons } from './pokemons.actions';\n\nconst initialState: PokemonState = {\n  pokemons: {\n    next: '',\n    previous: '',\n    count: 0,\n    results: [],\n  },\n  loading: false,\n  errors: '',\n};\n\nexport const pokemonsReducer = (state: PokemonState = initialState, action: Action): PokemonState => {\n  const states = {\n    ...reducer(pokemons, state, action, { dataMask: 'pokemons', loadingMask: 'loading', errorMask: 'errors' }),\n  };\n  return states[action.type] || state;\n};\n","import { combineReducers } from '@wellyes/redux-kit';\nimport { pokemonsReducer } from './pokemon/pokemons.reducer';\n\nexport const rootReducer = combineReducers({\n  pokemons: pokemonsReducer,\n});\n","import { createStore } from '@wellyes/redux-kit';\n\nimport { rootReducer } from './root.reducer';\n\nexport const store = createStore(rootReducer);\n","import { createSelector } from 'reselect';\nimport { RootReducer } from '@store/types';\n\nexport const getPokemonsState = (state: RootReducer) => state.pokemons;\n\nexport const getPokemons = createSelector(getPokemonsState, ({ loading, errors, pokemons }) => ({\n  loading,\n  errors,\n  pokemons,\n}));\n","import React, { FC } from 'react';\n\nimport { Pokemon as TPokemon } from '@store/pokemon/types';\n\nimport './pokemon.scss';\n\nexport const Pokemon: FC<TPokemon> = ({ name, url }) => {\n  const id: string = url.split('pokemon/')[1].replace('/', '');\n\n  return (\n    <div className=\"pokemon\">\n      <div className=\"pokemon__pic\">\n        <img height=\"100px\" width=\"100px\" src={`https://pokeres.bastionbot.org/images/pokemon/${id}.png`} alt={name} />\n      </div>\n      <div className=\"pokemon__info\">\n        <div className=\"pokemon__info__name\">name: {name}</div>\n        <div className=\"pokemon__info__url\">\n          <a href={url}>URL</a>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { FC, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { pokemonsWorker } from '@store/pokemon/pokemons.actions';\nimport { getPokemons } from '@store/pokemon/pokemons.selectors';\nimport { Pokemon as TPokemon } from '@store/pokemon/types';\n\nimport { Pokemon } from './pokemon';\nimport { Filters } from './types';\n\nimport './pokemons.scss';\n\nexport const PokemonsPage: FC = () => {\n  const dispatch = useDispatch();\n\n  const [filters, setFilters] = useState<Filters>({\n    limit: 21,\n    offset: 0,\n  });\n\n  const { pokemons, loading } = useSelector(getPokemons);\n\n  useEffect(() => {\n    dispatch(pokemonsWorker(filters.limit, filters.offset)());\n  }, [dispatch, filters]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page__header\">\n        <h2>Pokemons</h2>\n      </div>\n      <div className=\"page__body\">\n        {loading && <div>Loading...</div>}\n        {pokemons?.results.map((p: TPokemon) => (\n          <Pokemon key={p.url} {...p} />\n        ))}\n      </div>\n      <div className=\"page__footer\">\n        <input\n          type=\"number\"\n          value={filters.limit}\n          onChange={e => setFilters({ offset: 0, limit: Number(e.target.value) })}\n        />\n        <div>\n          <button\n            onClick={() => setFilters({ ...filters, offset: filters.offset - filters.limit })}\n            disabled={!pokemons.previous}\n          >\n            prev page\n          </button>\n          <button\n            onClick={() => setFilters({ ...filters, offset: filters.offset + filters.limit })}\n            disabled={!pokemons.next}\n          >\n            next page\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { FC } from 'react';\n\nimport { PokemonsPage } from '@pages/pokemons';\n\nexport const App: FC = () => <PokemonsPage />;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport { store } from '@store/index';\n\nimport { App } from './app';\n\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}